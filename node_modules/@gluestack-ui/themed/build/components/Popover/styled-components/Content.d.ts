/// <reference types="react" />
declare const _default: import("react").ForwardRefExoticComponent<Omit<Omit<Omit<import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>)) | null | undefined, unknown, import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>, "PopoverContent">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<((false | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").Animated.Value | import("react-native").Animated.AnimatedInterpolation<string | number> | import("react-native").Animated.WithAnimatedObject<import("react-native").ViewStyle> | import("react-native").Animated.WithAnimatedArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | readonly (import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>)[]>) & (false | import("react-native").ViewStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>)) | null | undefined>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack">, "ref"> & import("react").RefAttributes<import("react-native").Animated.AnimatedProps<import("react-native").ViewProps & import("react").RefAttributes<import("react-native").View>> & import("@legendapp/motion").MotionComponentProps<typeof import("react-native").View, import("react-native").ViewStyle, unknown, unknown, unknown>>> & {
    styledConfig?: any;
};
export default _default;
