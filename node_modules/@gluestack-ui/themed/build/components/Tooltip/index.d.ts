/// <reference types="react" />
export declare const Tooltip: import("@gluestack-ui/tooltip/lib/typescript/types").IToolTipComponentType<Omit<Omit<import("react-native").ViewProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps, "Tooltip">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").ViewProps>, Omit<Omit<import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "TooltipContent">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").ViewProps & {
    animationComponentGluestack: true;
}>, Omit<Omit<Omit<Omit<Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").TextProps>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, Omit<Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").TextProps>, "TooltipText">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack">, "ref"> & import("react").RefAttributes<Omit<Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").TextProps>>>;
export declare const TooltipContent: import("react").ForwardRefExoticComponent<Omit<Omit<import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").ViewStyle>, unknown, import("react-native").ViewProps & {
    animationComponentGluestack: true;
}, "TooltipContent">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").ViewStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").ViewProps & {
    animationComponentGluestack: true;
}>>;
export declare const TooltipText: import("react").ForwardRefExoticComponent<Omit<Omit<Omit<Omit<Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").TextProps>, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, Omit<Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").TextProps>, "TooltipText">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack">, "ref"> & import("react").RefAttributes<Omit<Omit<import("react-native").TextProps, never> & Partial<import("@gluestack-style/react/lib/typescript/types").ComponentProps<import("react-native").StyleProp<import("react-native").TextStyle>, unknown, import("react-native").TextProps, "Text">> & Partial<import("@gluestack-style/react/lib/typescript/types").UtilityProps<import("react-native").StyleProp<import("react-native").TextStyle>>> & {
    as?: any;
    children?: any;
}, "animationComponentGluestack"> & import("react").RefAttributes<import("react-native").TextProps>>>;
