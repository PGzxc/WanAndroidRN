export declare const Button: {
    theme: {
        borderRadius: string;
        backgroundColor: string;
        flexDirection: "row";
        justifyContent: "center";
        alignItems: "center";
        _text: {
            color: string;
            fontWeight: string;
            _dark: {
                color: string;
            };
        };
        _icon: {
            color: string;
            _dark: {
                color: string;
            };
        };
        _spinner: {
            props: {
                color: string;
            };
            _dark: {
                props: {
                    color: string;
                };
            };
        };
        variants: {
            action: {
                primary: {
                    bg: string;
                    borderColor: string;
                    ':hover': {
                        bg: string;
                        borderColor: string;
                    };
                    ':active': {
                        bg: string;
                        borderColor: string;
                    };
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _icon: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    _dark: {
                        bg: string;
                        borderColor: string;
                        ':hover': {
                            bg: string;
                            borderColor: string;
                        };
                        ':active': {
                            bg: string;
                            borderColor: string;
                        };
                        _text: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _icon: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _spinner: {
                            props: {
                                color: string;
                            };
                            ':hover': {
                                props: {
                                    color: string;
                                };
                            };
                            ':active': {
                                props: {
                                    color: string;
                                };
                            };
                        };
                        ':focusVisible': {
                            _web: {
                                boxShadow: string;
                            };
                        };
                    };
                };
                secondary: {
                    bg: string;
                    borderColor: string;
                    ':hover': {
                        bg: string;
                        borderColor: string;
                    };
                    ':active': {
                        bg: string;
                        borderColor: string;
                    };
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _icon: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    _dark: {
                        bg: string;
                        borderColor: string;
                        ':hover': {
                            bg: string;
                            borderColor: string;
                        };
                        ':active': {
                            bg: string;
                            borderColor: string;
                        };
                        _text: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _icon: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _spinner: {
                            props: {
                                color: string;
                            };
                            ':hover': {
                                props: {
                                    color: string;
                                };
                            };
                            ':active': {
                                props: {
                                    color: string;
                                };
                            };
                        };
                    };
                };
                positive: {
                    bg: string;
                    borderColor: string;
                    ':hover': {
                        bg: string;
                        borderColor: string;
                    };
                    ':active': {
                        bg: string;
                        borderColor: string;
                    };
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _icon: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    _dark: {
                        bg: string;
                        borderColor: string;
                        ':hover': {
                            bg: string;
                            borderColor: string;
                        };
                        ':active': {
                            bg: string;
                            borderColor: string;
                        };
                        _text: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _icon: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _spinner: {
                            props: {
                                color: string;
                            };
                            ':hover': {
                                props: {
                                    color: string;
                                };
                            };
                            ':active': {
                                props: {
                                    color: string;
                                };
                            };
                        };
                        ':focusVisible': {
                            _web: {
                                boxShadow: string;
                            };
                        };
                    };
                };
                negative: {
                    bg: string;
                    borderColor: string;
                    ':hover': {
                        bg: string;
                        borderColor: string;
                    };
                    ':active': {
                        bg: string;
                        borderColor: string;
                    };
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _icon: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    _dark: {
                        bg: string;
                        borderColor: string;
                        ':hover': {
                            bg: string;
                            borderColor: string;
                        };
                        ':active': {
                            bg: string;
                            borderColor: string;
                        };
                        _text: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _icon: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _spinner: {
                            props: {
                                color: string;
                            };
                            ':hover': {
                                props: {
                                    color: string;
                                };
                            };
                            ':active': {
                                props: {
                                    color: string;
                                };
                            };
                        };
                        ':focusVisible': {
                            _web: {
                                boxShadow: string;
                            };
                        };
                    };
                };
                default: {
                    bg: string;
                    ':hover': {
                        bg: string;
                    };
                    ':active': {
                        bg: string;
                    };
                    _dark: {
                        bg: string;
                        ':hover': {
                            bg: string;
                        };
                        ':active': {
                            bg: string;
                        };
                    };
                };
            };
            variant: {
                link: {
                    px: string;
                    ':hover': {
                        _text: {
                            textDecorationLine: "underline";
                        };
                    };
                    ':active': {
                        _text: {
                            textDecorationLine: "underline";
                        };
                    };
                };
                outline: {
                    bg: string;
                    borderWidth: string;
                    ':hover': {
                        bg: string;
                    };
                    ':active': {
                        bg: string;
                    };
                    _dark: {
                        bg: string;
                        ':hover': {
                            bg: string;
                        };
                        ':active': {
                            bg: string;
                        };
                    };
                };
                solid: {
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    _icon: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    _dark: {
                        _text: {
                            color: string;
                            ':hover': {
                                color: string;
                            };
                            ':active': {
                                color: string;
                            };
                        };
                        _spinner: {
                            props: {
                                color: string;
                            };
                            ':hover': {
                                props: {
                                    color: string;
                                };
                            };
                            ':active': {
                                props: {
                                    color: string;
                                };
                            };
                        };
                        _icon: {
                            props: {
                                color: string;
                            };
                            ':hover': {
                                props: {
                                    color: string;
                                };
                            };
                            ':active': {
                                props: {
                                    color: string;
                                };
                            };
                        };
                    };
                };
            };
            size: {
                xs: {
                    px: string;
                    h: string;
                    _icon: {
                        props: {
                            size: string;
                        };
                    };
                    _text: {
                        props: {
                            size: string;
                        };
                    };
                };
                sm: {
                    px: string;
                    h: string;
                    _icon: {
                        props: {
                            size: string;
                        };
                    };
                    _text: {
                        props: {
                            size: string;
                        };
                    };
                };
                md: {
                    px: string;
                    h: string;
                    _icon: {
                        props: {
                            size: string;
                        };
                    };
                    _text: {
                        props: {
                            size: string;
                        };
                    };
                };
                lg: {
                    px: string;
                    h: string;
                    _icon: {
                        props: {
                            size: string;
                        };
                    };
                    _text: {
                        props: {
                            size: string;
                        };
                    };
                };
                xl: {
                    px: string;
                    h: string;
                    _icon: {
                        props: {
                            size: string;
                        };
                    };
                    _text: {
                        props: {
                            size: string;
                        };
                    };
                };
            };
        };
        compoundVariants: ({
            action: string;
            variant: string;
            value: {
                px: string;
                bg: string;
                ':hover': {
                    bg: string;
                };
                ':active': {
                    bg: string;
                };
                _dark: {
                    bg: string;
                    ':hover': {
                        bg: string;
                    };
                    ':active': {
                        bg: string;
                    };
                    _text?: undefined;
                    _icon?: undefined;
                    _spinner?: undefined;
                };
                _text?: undefined;
                _icon?: undefined;
                _spinner?: undefined;
            };
        } | {
            action: string;
            variant: string;
            value: {
                bg: string;
                ':hover': {
                    bg: string;
                };
                ':active': {
                    bg: string;
                };
                _dark: {
                    bg: string;
                    ':hover': {
                        bg: string;
                    };
                    ':active': {
                        bg: string;
                    };
                    _text?: undefined;
                    _icon?: undefined;
                    _spinner?: undefined;
                };
                px?: undefined;
                _text?: undefined;
                _icon?: undefined;
                _spinner?: undefined;
            };
        } | {
            action: string;
            variant: string;
            value: {
                _text: {
                    color: string;
                    ':hover': {
                        color: string;
                    };
                    ':active': {
                        color: string;
                    };
                };
                _icon: {
                    color: string;
                    ':hover': {
                        color: string;
                    };
                    ':active': {
                        color: string;
                    };
                    props?: undefined;
                };
                _spinner: {
                    props: {
                        color: string;
                    };
                    ':hover': {
                        props: {
                            color: string;
                        };
                    };
                    ':active': {
                        props: {
                            color: string;
                        };
                    };
                };
                _dark: {
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _icon: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    bg?: undefined;
                    ':hover'?: undefined;
                    ':active'?: undefined;
                };
                px?: undefined;
                bg?: undefined;
                ':hover'?: undefined;
                ':active'?: undefined;
            };
        } | {
            action: string;
            variant: string;
            value: {
                _text: {
                    color: string;
                    ':hover': {
                        color: string;
                    };
                    ':active': {
                        color: string;
                    };
                };
                _icon: {
                    color: string;
                    ':hover': {
                        color: string;
                    };
                    ':active': {
                        color: string;
                    };
                    props: {
                        color: string;
                    };
                };
                _spinner: {
                    props: {
                        color: string;
                    };
                    ':hover': {
                        props: {
                            color: string;
                        };
                    };
                    ':active': {
                        props: {
                            color: string;
                        };
                    };
                };
                _dark: {
                    _text: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _icon: {
                        color: string;
                        ':hover': {
                            color: string;
                        };
                        ':active': {
                            color: string;
                        };
                    };
                    _spinner: {
                        props: {
                            color: string;
                        };
                        ':hover': {
                            props: {
                                color: string;
                            };
                        };
                        ':active': {
                            props: {
                                color: string;
                            };
                        };
                    };
                    bg?: undefined;
                    ':hover'?: undefined;
                    ':active'?: undefined;
                };
                px?: undefined;
                bg?: undefined;
                ':hover'?: undefined;
                ':active'?: undefined;
            };
        })[];
        props: {
            size: string;
            variant: string;
            action: string;
        };
        _web: {
            ':focusVisible': {
                outlineWidth: string;
                outlineColor: string;
                outlineStyle: string;
                _dark: {
                    outlineColor: string;
                };
            };
        };
        ':disabled': {
            opacity: number;
        };
    } & Partial<Partial<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
        props?: Partial<(import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps) & import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
            as?: any;
        } & {
            [x: string]: string | number | symbol | undefined;
        } & {
            [Key: string]: any;
        }> | undefined;
    }> & {} & {
        variants: import("@gluestack-style/react/lib/typescript/types").VariantType<{
            action: {
                primary: unknown;
                secondary: unknown;
                positive: unknown;
                negative: unknown;
                default: unknown;
            };
            variant: {
                link: unknown;
                outline: unknown;
                solid: unknown;
            };
            size: {
                xs: unknown;
                sm: unknown;
                md: unknown;
                lg: unknown;
                xl: unknown;
            };
        }, false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, []>;
        compoundVariants?: ({
            action?: "default" | "primary" | "secondary" | "positive" | "negative" | undefined;
            variant?: "outline" | "solid" | "link" | undefined;
            size?: "sm" | "md" | "xs" | "lg" | "xl" | undefined;
        } & {
            value?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, {
                action: {
                    primary: unknown;
                    secondary: unknown;
                    positive: unknown;
                    negative: unknown;
                    default: unknown;
                };
                variant: {
                    link: unknown;
                    outline: unknown;
                    solid: unknown;
                };
                size: {
                    xs: unknown;
                    sm: unknown;
                    md: unknown;
                    lg: unknown;
                    xl: unknown;
                };
            }, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        })[] | undefined;
        defaultProps?: ({
            [x: string]: string | number | symbol | undefined;
        } & {
            [key: string]: any;
        }) | undefined;
    }> & Partial<Partial<{
        props?: Partial<(import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps) & import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
            as?: any;
        } & {
            [x: string]: string | number | symbol | undefined;
        } & {
            [Key: string]: any;
        }> | undefined;
    }> & {} & {
        variants: import("@gluestack-style/react/lib/typescript/types").VariantType<{
            action: {
                primary: unknown;
                secondary: unknown;
                positive: unknown;
                negative: unknown;
                default: unknown;
            };
            variant: {
                link: unknown;
                outline: unknown;
                solid: unknown;
            };
            size: {
                xs: unknown;
                sm: unknown;
                md: unknown;
                lg: unknown;
                xl: unknown;
            };
        }, false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, []>;
        compoundVariants?: ({
            action?: "default" | "primary" | "secondary" | "positive" | "negative" | undefined;
            variant?: "outline" | "solid" | "link" | undefined;
            size?: "sm" | "md" | "xs" | "lg" | "xl" | undefined;
        } & {
            value?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, {
                action: {
                    primary: unknown;
                    secondary: unknown;
                    positive: unknown;
                    negative: unknown;
                    default: unknown;
                };
                variant: {
                    link: unknown;
                    outline: unknown;
                    solid: unknown;
                };
                size: {
                    xs: unknown;
                    sm: unknown;
                    md: unknown;
                    lg: unknown;
                    xl: unknown;
                };
            }, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        })[] | undefined;
        defaultProps?: ({
            [x: string]: string | number | symbol | undefined;
        } & {
            [key: string]: any;
        }) | undefined;
    }> & Partial<Partial<{}> & {
        _dark?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        _light?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
    } & {
        ":indeterminate"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":checked"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":readOnly"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":required"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":invalid"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":focus"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":focusVisible"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":hover"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":pressed"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":active"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":loading"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        ":disabled"?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
    } & {
        _web?: (import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "_web", "", []> & {
            props?: Partial<(import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps) & import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
                as?: any;
            } & {
                [x: string]: string | number | symbol | undefined;
            } & {
                [Key: string]: any;
            }> | undefined;
        } & Partial<{
            [key: string]: any;
        }>) | undefined;
        _ios?: (import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "_ios", "", []> & {
            props?: Partial<(import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps) & import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
                as?: any;
            } & {
                [x: string]: string | number | symbol | undefined;
            } & {
                [Key: string]: any;
            }> | undefined;
        } & Partial<{
            [key: string]: any;
        }>) | undefined;
        _android?: (import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, any, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "_android", "", []> & {
            props?: Partial<(import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps) & import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
                as?: any;
            } & {
                [x: string]: string | number | symbol | undefined;
            } & {
                [Key: string]: any;
            }> | undefined;
        } & Partial<{
            [key: string]: any;
        }>) | undefined;
    } & {
        [x: `_${string}`]: (import("@gluestack-style/react/lib/typescript/types").SxProps<import("@gluestack-style/react/lib/typescript/types").RNStyledProps, {}, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> & {
            props?: Partial<(import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps) & import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>> & import("@gluestack-style/react").AliasesProps<import("@gluestack-style/react/lib/typescript/types").TokenizedRNStyleProps<Partial<import("react-native").ViewStyle> & Partial<import("react-native").ImageStyle> & Partial<import("react-native").TextStyle> & Partial<import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>>> & Partial<import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>>>>> & {
                as?: any;
            } & {
                [x: string]: string | number | symbol | undefined;
            } & {
                [Key: string]: any;
            }> | undefined;
        } & Partial<{
            [key: string]: any;
        }>) | undefined;
    } & {} & {
        variants: import("@gluestack-style/react/lib/typescript/types").VariantType<{
            action: {
                primary: unknown;
                secondary: unknown;
                positive: unknown;
                negative: unknown;
                default: unknown;
            };
            variant: {
                link: unknown;
                outline: unknown;
                solid: unknown;
            };
            size: {
                xs: unknown;
                sm: unknown;
                md: unknown;
                lg: unknown;
                xl: unknown;
            };
        }, false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, []>;
        compoundVariants?: ({
            action?: "default" | "primary" | "secondary" | "positive" | "negative" | undefined;
            variant?: "outline" | "solid" | "link" | undefined;
            size?: "sm" | "md" | "xs" | "lg" | "xl" | undefined;
        } & {
            value?: import("@gluestack-style/react/lib/typescript/types").SxProps<false | import("react-native").ViewStyle | import("react-native").ImageStyle | import("react-native").TextStyle | import("react-native").RegisteredStyle<import("react-native").ViewStyle> | import("react-native").RecursiveArray<import("react-native").ViewStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ViewStyle>> | import("react-native").RegisteredStyle<import("react-native").TextStyle> | import("react-native").RecursiveArray<import("react-native").TextStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").TextStyle>> | import("react-native").RegisteredStyle<import("react-native").ImageStyle> | import("react-native").RecursiveArray<import("react-native").ImageStyle | import("react-native").Falsy | import("react-native").RegisteredStyle<import("react-native").ImageStyle>> | null | undefined, {
                action: {
                    primary: unknown;
                    secondary: unknown;
                    positive: unknown;
                    negative: unknown;
                    default: unknown;
                };
                variant: {
                    link: unknown;
                    outline: unknown;
                    solid: unknown;
                };
                size: {
                    xs: unknown;
                    sm: unknown;
                    md: unknown;
                    lg: unknown;
                    xl: unknown;
                };
            }, import("react-native").ViewProps | import("react-native").TextProps | import("react-native").ImageProps, "", "", []> | undefined;
        })[] | undefined;
        defaultProps?: ({
            [x: string]: string | number | symbol | undefined;
        } & {
            [key: string]: any;
        }) | undefined;
    }>;
    componentConfig?: Omit<Partial<{
        descendantStyle: any;
        ancestorStyle: any;
        resolveProps: any;
        componentName: any;
    }>, "componentName"> | undefined;
};
