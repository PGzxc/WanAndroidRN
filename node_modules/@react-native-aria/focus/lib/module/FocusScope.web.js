function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { FocusScope as AriaFocusScope, useFocusManager } from '@react-aria/focus';

const FocusScope = ({
  children,
  contain,
  ...props
}) => {
  /* Todo: stoping mounted and unMounted everytime contain is change */
  // if (contain === false) return <></>;
  return /*#__PURE__*/React.createElement(AriaFocusScope, _extends({
    contain: contain
  }, props), children);
};

export { FocusScope, useFocusManager };
//# sourceMappingURL=FocusScope.web.js.map