{"version":3,"sources":["useDialog.web.ts"],"names":["mapRNPropsToDomProps","props","newProps","accessibilityLabel","useDialog","ref","params","dialogProps"],"mappings":";;;;;;;AAiCA;;AACA;;AAlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBA;AACA;AACA;AACA;AAKA,MAAMA,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAMC,QAAQ,GAAG,EAAE,GAAGD,KAAL;AAAY,kBAAcA,KAAK,CAACE;AAAhC,GAAjB;AACA,SAAOD,QAAP;AACD,CAHD;;AAKO,SAASE,SAAT,CACLH,KADK,EAELI,GAFK,EAGO;AACZ,QAAMH,QAAQ,GAAGF,oBAAoB,CAACC,KAAD,CAArC;AACA,QAAMK,MAAM,GAAG,uBAAcJ,QAAd,EAAwBG,GAAxB,CAAf;AACAC,EAAAA,MAAM,CAACC,WAAP,GAAqB,4BAAgBD,MAAM,CAACC,WAAvB,CAArB;AAEA,SAAOD,MAAP;AACD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type { AriaDialogProps } from '@react-types/dialog';\nimport type { DOMAttributes, FocusableElement } from '@react-types/shared';\nimport type { RefObject } from 'react';\n\nexport interface DialogAria {\n  /** Props for the dialog container element. */\n  dialogProps: DOMAttributes;\n\n  /** Props for the dialog title element. */\n  titleProps: DOMAttributes;\n}\n\nexport interface DialogProps extends AriaDialogProps {\n  accessibilityLabel?: 'string';\n}\n\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\n\nimport { useDialog as useDialogAria } from '@react-aria/dialog';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\n\nconst mapRNPropsToDomProps = (props) => {\n  const newProps = { ...props, 'aria-label': props.accessibilityLabel };\n  return newProps;\n};\n\nexport function useDialog(\n  props: DialogProps,\n  ref: RefObject<FocusableElement>\n): DialogAria {\n  const newProps = mapRNPropsToDomProps(props);\n  const params = useDialogAria(newProps, ref);\n  params.dialogProps = mapDomPropsToRN(params.dialogProps);\n\n  return params;\n}\n"]}