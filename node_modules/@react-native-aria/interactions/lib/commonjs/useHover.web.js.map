{"version":3,"sources":["useHover.web.ts"],"names":["useHover","props","ref","params","current","hoverProps","finalResult","onHoverIn","onPointerEnter","onHoverOut","onPointerLeave"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,MAAMA,QAAQ,GAAG,CAACC,KAAK,GAAG,EAAT,EAA2BC,GAA3B,KAAyC;AAC/D,MAAIC,MAAM,GAAG,4BAAYF,KAAZ,CAAb;AACA,wBAAU,MAAM;AACdC,IAAAA,GAAG,IAAIA,GAAG,CAACE,OAAX,IAAsB,qCAAyBD,MAAM,CAACE,UAAhC,EAA4CH,GAA5C,CAAtB;AACD,GAFD,EAEG,EAFH;AAIA,QAAMI,WAAW,GAAG,EAClB,GAAGH,MADe;AAElBE,IAAAA,UAAU,EAAE,EACV,GAAGF,MAAM,CAACE,UADA;AAEVE,MAAAA,SAAS,EAAEJ,MAAM,CAACE,UAAP,CAAkBG,cAFnB;AAGVC,MAAAA,UAAU,EAAEN,MAAM,CAACE,UAAP,CAAkBK;AAHpB;AAFM,GAApB;AASA,SAAOJ,WAAP;AACD,CAhBM","sourcesContent":["import { useHover as useHoverWeb, HoverProps } from '@react-aria/interactions';\nimport { useEffect } from 'react';\nimport { attachEventHandlersOnRef } from '@react-native-aria/utils';\n\nexport const useHover = (props = {} as HoverProps, ref?: any) => {\n  let params = useHoverWeb(props);\n  useEffect(() => {\n    ref && ref.current && attachEventHandlersOnRef(params.hoverProps, ref);\n  }, []);\n\n  const finalResult = {\n    ...params,\n    hoverProps: {\n      ...params.hoverProps,\n      onHoverIn: params.hoverProps.onPointerEnter,\n      onHoverOut: params.hoverProps.onPointerLeave,\n    },\n  };\n\n  return finalResult;\n};\n"]}