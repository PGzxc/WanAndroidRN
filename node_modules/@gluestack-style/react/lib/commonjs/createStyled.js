"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createStyled = void 0;
var _styled = require("./styled");
const createStyled = plugins => {
  let styledComponent = function (Component, styledObject) {
    let compConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    let extendedConfig = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    let styledObj = styledObject;
    for (const pluginName in plugins) {
      var _plugins$pluginName;
      styledObj = (_plugins$pluginName = plugins[pluginName]) === null || _plugins$pluginName === void 0 ? void 0 : _plugins$pluginName.inputMiddleWare(styledObj);
    }
    let NewComp = (0, _styled.styled)(Component, styledObj, compConfig, extendedConfig);

    // Running reverse loop to handle callstack side effects
    plugins.reverse();
    for (const pluginName in plugins) {
      var _plugins$pluginName2;
      if ((_plugins$pluginName2 = plugins[pluginName]) !== null && _plugins$pluginName2 !== void 0 && _plugins$pluginName2.componentMiddleWare) {
        var _plugins$pluginName3;
        NewComp = (_plugins$pluginName3 = plugins[pluginName]) === null || _plugins$pluginName3 === void 0 ? void 0 : _plugins$pluginName3.componentMiddleWare({
          NewComp,
          styledObject,
          compConfig,
          extendedConfig
        });
      }
    }
    return NewComp;
  };
  for (const pluginName in plugins) {
    const compWrapper = typeof plugins[pluginName].wrapperComponentMiddleWare === 'function' ? plugins[pluginName].wrapperComponentMiddleWare() : null;
    if (compWrapper) {
      for (const key of Object.keys(compWrapper)) {
        // @ts-ignore
        styledComponent[key] = compWrapper[key];
      }
    }
  }
  return styledComponent;
};
exports.createStyled = createStyled;
//# sourceMappingURL=createStyled.js.map