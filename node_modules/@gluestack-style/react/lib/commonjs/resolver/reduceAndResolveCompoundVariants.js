"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reduceAndResolveCompoundVariants = reduceAndResolveCompoundVariants;
var _sxToSxResolved = require("./sxToSxResolved");
function reduceAndResolveCompoundVariants(compoundVariants, path, CONFIG) {
  let shouldResolve = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  const compoundVariantsResolved = compoundVariants === null || compoundVariants === void 0 ? void 0 : compoundVariants.map((compoundVariant, index) => {
    const {
      value,
      ...condition
    } = compoundVariant;
    // let conditionPath: Array<string> = [];
    // Object.keys(condition).map((key) => {
    //   conditionPath.push(key);
    //   conditionPath.push(condition[key]);
    // });
    return (0, _sxToSxResolved.sxToSXResolved)(
    //@ts-ignore

    value, [...path, 'compoundVariants', index], {
      condition
    }, CONFIG, shouldResolve);
  });
  // console.log(compoundVariantsResolved, 'compoundVariantsResolved');

  return compoundVariantsResolved;
}
//# sourceMappingURL=reduceAndResolveCompoundVariants.js.map