"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.injectComponentAndDescendantStyles = injectComponentAndDescendantStyles;
var _styleSheet = require("../style-sheet");
var _getComponentStyle = require("./getComponentStyle");
function injectComponentAndDescendantStyles(orderedResolved, styleTagId) {
  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'boot';
  let _GluestackStyleSheet = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _styleSheet.GluestackStyleSheet;
  let platform = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  let inlineStyleMap = arguments.length > 5 ? arguments[5] : undefined;
  const [componentOrderResolvedBaseStyle, componentOrderResolvedBaseStateStyle] = (0, _getComponentStyle.getComponentResolvedBaseStyle)(orderedResolved);
  const [componentOrderResolvedVariantStyle, componentOrderResolvedVariantStateStyle] = (0, _getComponentStyle.getComponentResolvedVariantStyle)(orderedResolved);
  const [descendantOrderResolvedBaseStyle, descendantOrderResolvedBaseStateStyle] = (0, _getComponentStyle.getDescendantResolvedBaseStyle)(orderedResolved);
  const [descendantOrderResolvedVariantStyle, descendantOrderResolvedVariantStateStyle] = (0, _getComponentStyle.getDescendantResolvedVariantStyle)(orderedResolved);
  const componentOrderResolvedBaseStyleIds = _styleSheet.GluestackStyleSheet.declare([...componentOrderResolvedBaseStyle, ...componentOrderResolvedBaseStateStyle], type + '-base', styleTagId ? styleTagId : 'css-injected-boot-time', {});
  const descendantOrderResolvedBaseStyleIds = _styleSheet.GluestackStyleSheet.declare([...descendantOrderResolvedBaseStyle, ...descendantOrderResolvedBaseStateStyle], type + '-descendant-base', styleTagId ? styleTagId : 'css-injected-boot-time-descendant', {});
  const componentOrderResolvedVariantStyleIds = _styleSheet.GluestackStyleSheet.declare([...componentOrderResolvedVariantStyle, ...componentOrderResolvedVariantStateStyle], type + '-variant', styleTagId ? styleTagId : 'css-injected-boot-time', {});
  const descendantOrderResolvedVariantStyleIds = _styleSheet.GluestackStyleSheet.declare([...descendantOrderResolvedVariantStyle, ...descendantOrderResolvedVariantStateStyle], type + '-descendant-variant', styleTagId ? styleTagId : 'css-injected-boot-time-descendant', {});
  const styleCSSIdsArr = [...componentOrderResolvedBaseStyleIds, ...descendantOrderResolvedBaseStyleIds, ...componentOrderResolvedVariantStyleIds, ...descendantOrderResolvedVariantStyleIds];
  const toBeInjected = _styleSheet.GluestackStyleSheet.resolve(styleCSSIdsArr, {}, {}, false);
  if (platform === 'web') {
    _styleSheet.GluestackStyleSheet.inject(toBeInjected, inlineStyleMap);
  }
  return styleCSSIdsArr;
}
//# sourceMappingURL=injectComponentAndDescendantStyles.js.map