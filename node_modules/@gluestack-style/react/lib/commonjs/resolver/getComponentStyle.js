"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getComponentResolvedBaseStyle = getComponentResolvedBaseStyle;
exports.getComponentResolvedVariantStyle = getComponentResolvedVariantStyle;
exports.getDescendantResolvedBaseStyle = getDescendantResolvedBaseStyle;
exports.getDescendantResolvedVariantStyle = getDescendantResolvedVariantStyle;
function getComponentResolvedBaseStyle(orderedResolved) {
  const componentOrderResolvedBaseStyle = [];
  const componentOrderResolvedBaseStateStyle = [];
  orderedResolved && orderedResolved.forEach(item => {
    var _item$meta$path, _item$meta$path2, _item$meta$path3;
    if (!((_item$meta$path = item.meta.path) !== null && _item$meta$path !== void 0 && _item$meta$path.includes('descendants')) && !((_item$meta$path2 = item.meta.path) !== null && _item$meta$path2 !== void 0 && _item$meta$path2.includes('variants') || (_item$meta$path3 = item.meta.path) !== null && _item$meta$path3 !== void 0 && _item$meta$path3.includes('compoundVariants'))) {
      var _item$meta$path4;
      if ((_item$meta$path4 = item.meta.path) !== null && _item$meta$path4 !== void 0 && _item$meta$path4.includes('state')) {
        componentOrderResolvedBaseStateStyle.push(item);
      } else {
        componentOrderResolvedBaseStyle.push(item);
      }
    }
  });
  return [componentOrderResolvedBaseStyle, componentOrderResolvedBaseStateStyle];
}
function getComponentResolvedVariantStyle(orderedResolved) {
  const componentOrderResolvedVariantStyle = [];
  const componentOrderResolvedVariantStateStyle = [];
  orderedResolved && orderedResolved.forEach(item => {
    var _item$meta$path5, _item$meta$path6, _item$meta$path7;
    if (!((_item$meta$path5 = item.meta.path) !== null && _item$meta$path5 !== void 0 && _item$meta$path5.includes('descendants')) && ((_item$meta$path6 = item.meta.path) !== null && _item$meta$path6 !== void 0 && _item$meta$path6.includes('variants') || (_item$meta$path7 = item.meta.path) !== null && _item$meta$path7 !== void 0 && _item$meta$path7.includes('compoundVariants'))) {
      var _item$meta$path8;
      if ((_item$meta$path8 = item.meta.path) !== null && _item$meta$path8 !== void 0 && _item$meta$path8.includes('state')) {
        componentOrderResolvedVariantStateStyle.push(item);
      } else {
        componentOrderResolvedVariantStyle.push(item);
      }
    }
  });
  return [componentOrderResolvedVariantStyle, componentOrderResolvedVariantStateStyle];
}
function getDescendantResolvedBaseStyle(orderedResolved) {
  const descendantOrderResolvedBaseStyle = [];
  const descendantOrderResolvedBaseStateStyle = [];
  orderedResolved && orderedResolved.forEach(item => {
    var _item$meta$path9, _item$meta$path10, _item$meta$path11;
    if ((_item$meta$path9 = item.meta.path) !== null && _item$meta$path9 !== void 0 && _item$meta$path9.includes('descendants') && !((_item$meta$path10 = item.meta.path) !== null && _item$meta$path10 !== void 0 && _item$meta$path10.includes('variants') || (_item$meta$path11 = item.meta.path) !== null && _item$meta$path11 !== void 0 && _item$meta$path11.includes('compoundVariants'))) {
      var _item$meta$path12;
      if ((_item$meta$path12 = item.meta.path) !== null && _item$meta$path12 !== void 0 && _item$meta$path12.includes('state')) {
        descendantOrderResolvedBaseStateStyle.push(item);
      } else {
        descendantOrderResolvedBaseStyle.push(item);
      }
    }
  });
  return [descendantOrderResolvedBaseStyle, descendantOrderResolvedBaseStateStyle];
}
function getDescendantResolvedVariantStyle(orderedResolved) {
  const descendantOrderResolvedVariantStyle = [];
  const descendantOrderResolvedVariantStateStyle = [];
  orderedResolved && orderedResolved.forEach(item => {
    var _item$meta$path13, _item$meta$path14, _item$meta$path15;
    if ((_item$meta$path13 = item.meta.path) !== null && _item$meta$path13 !== void 0 && _item$meta$path13.includes('descendants') && ((_item$meta$path14 = item.meta.path) !== null && _item$meta$path14 !== void 0 && _item$meta$path14.includes('variants') || (_item$meta$path15 = item.meta.path) !== null && _item$meta$path15 !== void 0 && _item$meta$path15.includes('compoundVariants'))) {
      var _item$meta$path16;
      if ((_item$meta$path16 = item.meta.path) !== null && _item$meta$path16 !== void 0 && _item$meta$path16.includes('state')) {
        descendantOrderResolvedVariantStateStyle.push(item);
      } else {
        descendantOrderResolvedVariantStyle.push(item);
      }
    }
  });
  return [descendantOrderResolvedVariantStyle, descendantOrderResolvedVariantStateStyle];
}
//# sourceMappingURL=getComponentStyle.js.map