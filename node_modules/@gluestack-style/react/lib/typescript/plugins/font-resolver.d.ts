import React from 'react';
import type { IStyled, IStyledPlugin } from '../types';
interface FontPlugin {
    mapFonts?(style: any): any;
}
export declare class FontResolver implements IStyledPlugin, FontPlugin {
    #private;
    name: 'FontHandler';
    styledUtils: IStyled | undefined;
    mapFonts(style: any): void;
    register(styledUtils?: any): void;
    constructor({ styledUtils, mapFonts, }?: {
        styledUtils?: IStyled;
        mapFonts?: FontPlugin['mapFonts'];
    });
    inputMiddleWare(styledObj?: any, shouldUpdate?: boolean, _?: boolean, Component?: React.ComponentType): any[];
    fontHandler(styledObject: any, shouldUpdate: boolean, fontStyleObject?: any, keyPath?: string[]): any;
    componentMiddleWare({ Component: InputComponent, extendedConfig }: any): React.ForwardRefExoticComponent<Omit<any, "ref"> & React.RefAttributes<unknown>>;
}
export {};
//# sourceMappingURL=font-resolver.d.ts.map