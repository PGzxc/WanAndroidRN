import React from 'react';
import type { IAnimationDriverPlugin, IStyledPlugin } from '@gluestack-style/react';
export declare class AnimationResolver implements IStyledPlugin {
    #private;
    name: 'AnimationResolver';
    componentDriver: IAnimationDriverPlugin;
    config: {
        aliases: {
            readonly ':animate': "animate";
            readonly ':initial': "initial";
            readonly ':exit': "exit";
            readonly ':initialProps': "initialProps";
            readonly ':animateProps': "animateProps";
            readonly ':transition': "transition";
            readonly ':transformOrigin': "transformOrigin";
            readonly ':whileTap': "whileTap";
            readonly ':whileHover': "whileHover";
            readonly ':onAnimationComplete': "onAnimationComplete";
        };
        tokens: {};
        animatedPropMap: any;
    };
    AnimatePresenceComp: React.ExoticComponent<{
        children?: React.ReactNode;
    }>;
    register(config: any): void;
    constructor(ComponentDriverClass: any, config?: any);
    inputMiddleWare<P>(styledObj?: {}, shouldUpdateConfig?: any, _?: boolean, Component?: React.ComponentType): {
        [key in keyof typeof this.config.aliases]: P[(typeof this.config.aliases)[key]];
    };
    updateStyledObject(styledObject: any, shouldUpdateConfig: boolean, resolvedStyledObject?: any, keyPath?: string[]): any;
    renameObjectKey(obj: any, from: string, to: string): any;
    componentMiddleWare({ Component, ExtendedConfig }: any): any;
}
export * from './AnimatedComponents';
//# sourceMappingURL=index.d.ts.map