{"version":3,"names":["isArray","MemoFnComponent","React","Component","createMotionAnimatedComponent","LinearGradient","setLinearGradientComponent","linearGradient","GradientHelper","render","numColors","startX","startY","endX","endY","rest","props","start","undefined","x","y","end","colors","i","push","AnimatedGradientHelper","pointToXY","point","name","MotionLinearGradient","animateProps","initialProps","propsOut","colorsAnimate","startAnimate","endAnimate","animatePropsOut","forEach","color","length","initialPropsOut","colorsInitial","startInitial","endInitial"],"sources":["LinearGradient.tsx"],"sourcesContent":["import { isArray } from '@legendapp/tools';\nimport { MemoFnComponent } from '@legendapp/tools/react';\nimport React, { Component, ComponentClass } from 'react';\nimport type { ViewProps, ViewStyle } from 'react-native';\nimport { createMotionAnimatedComponent } from './createMotionComponent';\nimport type { MotionComponentProps } from './Interfaces';\n\nexport type LinearGradientPoint = {\n    x: number;\n    y: number;\n};\n\nexport type LinearGradientProps = ViewProps & {\n    colors?: string[];\n    locations?: number[] | null;\n    start?: LinearGradientPoint | null;\n    end?: LinearGradientPoint | null;\n};\n\nlet LinearGradient;\n\nfunction setLinearGradientComponent(linearGradient) {\n    LinearGradient = linearGradient;\n}\n\ntype PropsGradient = Omit<LinearGradientProps, 'colors'> & {\n    numColors?: number;\n    startX?: number;\n    startY?: number;\n    endX?: number;\n    endY?: number;\n};\n\nclass GradientHelper extends Component<PropsGradient> {\n    render() {\n        const { numColors, startX, startY, endX, endY, ...rest } = this.props;\n\n        // Combine startX, startY, endX, endY back into start,end\n        let start;\n        if (startX !== undefined || startY !== undefined) {\n            start = {\n                x: startX,\n                y: startY,\n            };\n        }\n        let end;\n        if (endX !== undefined || endY !== undefined) {\n            end = {\n                x: endX,\n                y: endY,\n            };\n        }\n\n        // Combine individual color props back into a colors array\n        const colors: string[] = [];\n        for (let i = 0; i < numColors; i++) {\n            colors.push(rest['color' + i]);\n            delete rest['color' + i];\n        }\n\n        return <LinearGradient colors={colors} start={start} end={end} {...rest} />;\n    }\n}\n\nconst AnimatedGradientHelper = createMotionAnimatedComponent(GradientHelper);\n\nfunction pointToXY(props: PropsGradient, point: LinearGradientPoint, name: string) {\n    if (point) {\n        props[name + 'X'] = isArray(point) ? point[0] : point.x;\n        props[name + 'Y'] = isArray(point) ? point[1] : point.y;\n    }\n}\n\n// Create MotionLinearGradient with the same API as other Motion components, but it's more complicated because it needs to\n// transform to a different set of props into the AnimatedGradientHelper.\nconst MotionLinearGradient = MemoFnComponent(function <\n    TAnimate,\n    TAnimateProps extends Partial<Omit<LinearGradientProps, 'locations' | 'style'>>\n>(\n    props: MotionComponentProps<\n        ComponentClass<Omit<LinearGradientProps, 'locations'>>,\n        ViewStyle,\n        TAnimate,\n        TAnimateProps,\n        Omit<LinearGradientProps, 'locations' | 'style'>\n    > &\n        LinearGradientProps\n) {\n    const { colors, animateProps, start, end, initialProps, ...propsOut } = props;\n    const { colors: colorsAnimate, start: startAnimate, end: endAnimate, ...animatePropsOut } = animateProps as LinearGradientProps;\n\n    // Split colors array out into individual props so they can be animated\n    colors?.forEach((color, i) => (propsOut['color' + i] = color));\n    colorsAnimate?.forEach((color, i) => (animatePropsOut['color' + i] = color));\n\n    // Split start/end objects out into individual props so they can be animated\n    pointToXY(propsOut, start, 'start');\n    pointToXY(propsOut, end, 'end');\n\n    pointToXY(animatePropsOut, startAnimate, 'start');\n    pointToXY(animatePropsOut, endAnimate, 'end');\n\n    let numColors = colors?.length || colorsAnimate?.length || 0;\n\n    // Split initialProps too if it exists\n    const initialPropsOut: Partial<LinearGradientProps> = {};\n    if (initialProps) {\n        const { colors: colorsInitial, start: startInitial, end: endInitial } = animateProps as LinearGradientProps;\n        colorsInitial?.forEach((color, i) => (initialPropsOut['color' + i] = color));\n        pointToXY(initialPropsOut, startInitial, 'start');\n        pointToXY(initialPropsOut, endInitial, 'end');\n\n        if (colorsInitial) {\n            numColors = colorsInitial.length;\n        }\n    }\n\n    // @ts-ignore Ignore this because it won't conform to the customized props\n    return <AnimatedGradientHelper numColors={numColors} {...propsOut} initialProps={initialPropsOut} animateProps={animatePropsOut} />;\n});\n\nexport { setLinearGradientComponent, MotionLinearGradient };\n"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiD,OAAjD;AAEA,SAASC,6BAAT,QAA8C,yBAA9C;AAeA,IAAIC,cAAJ;;AAEA,SAASC,0BAAT,CAAoCC,cAApC,EAAoD;EAChDF,cAAc,GAAGE,cAAjB;AACH;;AAUD,MAAMC,cAAN,SAA6BL,SAA7B,CAAsD;EAClDM,MAAM,GAAG;IACL,MAAM;MAAEC,SAAF;MAAaC,MAAb;MAAqBC,MAArB;MAA6BC,IAA7B;MAAmCC,IAAnC;MAAyC,GAAGC;IAA5C,IAAqD,KAAKC,KAAhE,CADK,CAGL;;IACA,IAAIC,KAAJ;;IACA,IAAIN,MAAM,KAAKO,SAAX,IAAwBN,MAAM,KAAKM,SAAvC,EAAkD;MAC9CD,KAAK,GAAG;QACJE,CAAC,EAAER,MADC;QAEJS,CAAC,EAAER;MAFC,CAAR;IAIH;;IACD,IAAIS,GAAJ;;IACA,IAAIR,IAAI,KAAKK,SAAT,IAAsBJ,IAAI,KAAKI,SAAnC,EAA8C;MAC1CG,GAAG,GAAG;QACFF,CAAC,EAAEN,IADD;QAEFO,CAAC,EAAEN;MAFD,CAAN;IAIH,CAjBI,CAmBL;;;IACA,MAAMQ,MAAgB,GAAG,EAAzB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,SAApB,EAA+Ba,CAAC,EAAhC,EAAoC;MAChCD,MAAM,CAACE,IAAP,CAAYT,IAAI,CAAC,UAAUQ,CAAX,CAAhB;MACA,OAAOR,IAAI,CAAC,UAAUQ,CAAX,CAAX;IACH;;IAED,oBAAO,oBAAC,cAAD;MAAgB,MAAM,EAAED,MAAxB;MAAgC,KAAK,EAAEL,KAAvC;MAA8C,GAAG,EAAEI;IAAnD,GAA4DN,IAA5D,EAAP;EACH;;AA5BiD;;AA+BtD,MAAMU,sBAAsB,GAAGrB,6BAA6B,CAACI,cAAD,CAA5D;;AAEA,SAASkB,SAAT,CAAmBV,KAAnB,EAAyCW,KAAzC,EAAqEC,IAArE,EAAmF;EAC/E,IAAID,KAAJ,EAAW;IACPX,KAAK,CAACY,IAAI,GAAG,GAAR,CAAL,GAAoB5B,OAAO,CAAC2B,KAAD,CAAP,GAAiBA,KAAK,CAAC,CAAD,CAAtB,GAA4BA,KAAK,CAACR,CAAtD;IACAH,KAAK,CAACY,IAAI,GAAG,GAAR,CAAL,GAAoB5B,OAAO,CAAC2B,KAAD,CAAP,GAAiBA,KAAK,CAAC,CAAD,CAAtB,GAA4BA,KAAK,CAACP,CAAtD;EACH;AACJ,C,CAED;AACA;;;AACA,MAAMS,oBAAoB,GAAG5B,eAAe,CAAC,UAIzCe,KAJyC,EAY3C;EACE,MAAM;IAAEM,MAAF;IAAUQ,YAAV;IAAwBb,KAAxB;IAA+BI,GAA/B;IAAoCU,YAApC;IAAkD,GAAGC;EAArD,IAAkEhB,KAAxE;EACA,MAAM;IAAEM,MAAM,EAAEW,aAAV;IAAyBhB,KAAK,EAAEiB,YAAhC;IAA8Cb,GAAG,EAAEc,UAAnD;IAA+D,GAAGC;EAAlE,IAAsFN,YAA5F,CAFF,CAIE;;EACAR,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEe,OAAR,CAAgB,CAACC,KAAD,EAAQf,CAAR,KAAeS,QAAQ,CAAC,UAAUT,CAAX,CAAR,GAAwBe,KAAvD;EACAL,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEI,OAAf,CAAuB,CAACC,KAAD,EAAQf,CAAR,KAAea,eAAe,CAAC,UAAUb,CAAX,CAAf,GAA+Be,KAArE,EANF,CAQE;;EACAZ,SAAS,CAACM,QAAD,EAAWf,KAAX,EAAkB,OAAlB,CAAT;EACAS,SAAS,CAACM,QAAD,EAAWX,GAAX,EAAgB,KAAhB,CAAT;EAEAK,SAAS,CAACU,eAAD,EAAkBF,YAAlB,EAAgC,OAAhC,CAAT;EACAR,SAAS,CAACU,eAAD,EAAkBD,UAAlB,EAA8B,KAA9B,CAAT;EAEA,IAAIzB,SAAS,GAAG,CAAAY,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEiB,MAAR,MAAkBN,aAAlB,aAAkBA,aAAlB,uBAAkBA,aAAa,CAAEM,MAAjC,KAA2C,CAA3D,CAfF,CAiBE;;EACA,MAAMC,eAA6C,GAAG,EAAtD;;EACA,IAAIT,YAAJ,EAAkB;IACd,MAAM;MAAET,MAAM,EAAEmB,aAAV;MAAyBxB,KAAK,EAAEyB,YAAhC;MAA8CrB,GAAG,EAAEsB;IAAnD,IAAkEb,YAAxE;IACAW,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEJ,OAAf,CAAuB,CAACC,KAAD,EAAQf,CAAR,KAAeiB,eAAe,CAAC,UAAUjB,CAAX,CAAf,GAA+Be,KAArE;IACAZ,SAAS,CAACc,eAAD,EAAkBE,YAAlB,EAAgC,OAAhC,CAAT;IACAhB,SAAS,CAACc,eAAD,EAAkBG,UAAlB,EAA8B,KAA9B,CAAT;;IAEA,IAAIF,aAAJ,EAAmB;MACf/B,SAAS,GAAG+B,aAAa,CAACF,MAA1B;IACH;EACJ,CA5BH,CA8BE;;;EACA,oBAAO,oBAAC,sBAAD;IAAwB,SAAS,EAAE7B;EAAnC,GAAkDsB,QAAlD;IAA4D,YAAY,EAAEQ,eAA1E;IAA2F,YAAY,EAAEJ;EAAzG,GAAP;AACH,CA5C2C,CAA5C;AA8CA,SAAS9B,0BAAT,EAAqCuB,oBAArC"}