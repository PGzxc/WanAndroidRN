{"version":3,"names":["isArray","isNumber","isString","React","forwardRef","useContext","useMemo","useRef","Animated","Easing","StyleSheet","config","DefaultTransitionTime","ContextPressable","useTransformOrigin","TransformKeys","x","y","scale","scaleX","scaleY","skewX","skewY","perspective","rotate","rotateX","rotateY","rotateZ","matrix","OtherNativeKeys","opacity","DefaultValues","DefaultTransition","type","duration","Eases","linear","easeIn","ease","easeInOut","inOut","easeOut","out","circIn","circle","circInOut","circOut","backIn","back","backInOut","backOut","addKeysToSet","set","Set","i","length","obj","keys","Object","add","createMotionComponent","Component","MotionComponent","ref","animate","animateProps","initial","initialProps","exit","transition","transformOrigin","style","styleProp","onLayout","onLayoutProp","whileTap","whileHover","onAnimationComplete","rest","refAnims","animKeysSet","values","assign","pressed","hovered","animKeys","animValues","map","key","update","anims","current","useNativeDriver","every","isProp","undefined","value","valueInitial","isStr","isArr","startValue","animValue","Value","valueInterp","toValue","fromInterp","from","interpolation","interpolate","inputRange","outputRange","transitionForKey","timing","easing","animOptions","requestAnimationFrame","callback","loop","animation","spring","iterations","start","animProps","transforms","entries","forEach","push","transform","compose","createMotionAnimatedComponent","component","createAnimatedComponent"],"sources":["createMotionComponent.tsx"],"sourcesContent":["import { isArray, isNumber, isString } from '@legendapp/tools';\nimport React, { ComponentPropsWithRef, ComponentType, forwardRef, ReactElement, Ref, useContext, useMemo, useRef } from 'react';\nimport { Animated, Easing, StyleProp, StyleSheet, TransformsStyle } from 'react-native';\nimport { config } from './configureMotion';\nimport { DefaultTransitionTime } from './Constants';\nimport type {\n    ComponentStyle,\n    EaseFunction,\n    MotionComponentProps,\n    MotionTransition,\n    MotionTransitionTween,\n    PropsTransforms,\n    UnionToIntersection,\n} from './Interfaces';\nimport { ContextPressable } from './MotionPressable';\nimport { useTransformOrigin } from './useTransformOrigin';\n\ninterface AnimInfo {\n    animValue: Animated.Value;\n    value: any;\n    valueInterp?: number;\n    interpolation?: any;\n}\n\nconst TransformKeys: Record<keyof PropsTransforms, keyof UnionToIntersection<TransformsStyle['transform'][number]>> = {\n    x: 'translateX',\n    y: 'translateY',\n    scale: 'scale',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    skewX: 'skewX',\n    skewY: 'skewY',\n    perspective: 'perspective',\n    rotate: 'rotate',\n    rotateX: 'rotateX',\n    rotateY: 'rotateY',\n    rotateZ: 'rotateZ',\n    matrix: 'matrix',\n};\n\nconst OtherNativeKeys = {\n    opacity: 'opacity',\n} as const;\n\nconst DefaultValues: Record<keyof PropsTransforms | keyof typeof OtherNativeKeys, any> = {\n    x: 0,\n    y: 0,\n    scale: 1,\n    scaleX: 1,\n    scaleY: 1,\n    skewX: '0deg',\n    skewY: '0deg',\n    perspective: 0,\n    rotate: '0deg',\n    rotateX: '0deg',\n    rotateY: '0deg',\n    rotateZ: '0deg',\n    matrix: [],\n    opacity: 1,\n};\n\nconst DefaultTransition: MotionTransition = { type: 'tween', duration: DefaultTransitionTime };\nconst Eases: Record<EaseFunction, (value: number) => number> = {\n    linear: Easing.linear,\n    easeIn: Easing.ease,\n    easeInOut: Easing.inOut(Easing.ease),\n    easeOut: Easing.out(Easing.ease),\n    circIn: Easing.circle,\n    circInOut: Easing.inOut(Easing.circle),\n    circOut: Easing.out(Easing.circle),\n    backIn: Easing.back(2),\n    backInOut: Easing.inOut(Easing.back(2)),\n    backOut: Easing.out(Easing.back(2)),\n};\n\nfunction addKeysToSet(...objs: Record<string, any>[]) {\n    const set = new Set<string>();\n    for (let i = 0; i < objs.length; i++) {\n        const obj = objs[i];\n        if (obj) {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length; i++) {\n                set.add(keys[i]);\n            }\n        }\n    }\n    return set;\n}\n\nexport function createMotionComponent<T extends ComponentType<any>, TExtraProps = {}>(Component: Animated.AnimatedComponent<T> | T) {\n    return forwardRef(function MotionComponent<TAnimate, TAnimateProps>(\n        {\n            animate,\n            animateProps,\n            initial,\n            initialProps,\n            exit,\n            transition,\n            transformOrigin,\n            style: styleProp,\n            onLayout: onLayoutProp,\n            whileTap,\n            whileHover,\n            onAnimationComplete,\n            ...rest\n        }: Animated.AnimatedProps<ComponentPropsWithRef<T & TExtraProps>> &\n            MotionComponentProps<T, ComponentStyle<T>, TAnimate, TAnimateProps>,\n        // @ts-ignore\n        ref: Ref<InstanceType<T>>\n    ) {\n        const refAnims = useRef<Partial<Record<string, AnimInfo>>>({});\n\n        // Generate the arrays of keys and values for transitioning. These are used as deps of useMemo\n        // so that it will update whenever a key or value changes.\n        const animKeysSet = addKeysToSet(initial, animate, animateProps, whileTap, whileHover, exit);\n        const values = Object.assign({}, animate);\n\n        if (animateProps) {\n            addKeysToSet(animKeysSet, animateProps);\n            Object.assign(values, animateProps);\n        }\n\n        if (whileTap || whileHover) {\n            const { pressed, hovered } = useContext(ContextPressable);\n\n            if (whileHover) {\n                addKeysToSet(animKeysSet, whileHover);\n                if (hovered) {\n                    Object.assign(values, whileHover);\n                }\n            }\n            if (whileTap) {\n                addKeysToSet(animKeysSet, whileTap);\n                if (pressed) {\n                    Object.assign(values, whileTap);\n                }\n            }\n        }\n\n        if (exit) {\n            addKeysToSet(animKeysSet, exit);\n        }\n\n        const animKeys = [...animKeysSet];\n        const animValues = animKeys.map((key) => values[key]);\n\n        const update = () => {\n            const anims = refAnims.current;\n\n            const useNativeDriver = !animateProps && animKeys.every((key) => !!OtherNativeKeys[key] || !!TransformKeys[key]);\n\n            for (let i = 0; i < animKeys.length; i++) {\n                const key = animKeys[i];\n                const isProp = animateProps?.[key] !== undefined;\n                let value = values[key];\n                const valueInitial = (isProp ? initialProps?.[key] : initial?.[key]) ?? value ?? DefaultValues[key];\n                if (value === undefined) {\n                    value = valueInitial ?? DefaultValues[key];\n                }\n\n                if (!anims[key] || anims[key].value !== value) {\n                    const isStr = isString(valueInitial);\n                    const isArr = isArray(valueInitial);\n\n                    // If this is the first run or it's a new key, create the Animated.Value\n                    if (!anims[key]) {\n                        const startValue = isStr || isArr ? 1 : (valueInitial as number);\n                        const animValue = new Animated.Value(startValue);\n                        anims[key] = {\n                            value: valueInitial,\n                            animValue,\n                            valueInterp: isStr ? 1 : undefined,\n                        };\n                    }\n\n                    let toValue: number;\n                    // If string or array it needs to interpolate, so toggle back and forth between 0 and 1,\n                    // interpolating from current value to target value\n                    if (isStr || isArr) {\n                        const fromInterp = anims[key].valueInterp;\n                        const from = anims[key].value;\n                        anims[key].interpolation = anims[key].animValue.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: fromInterp === 1 ? [value, from] : [from, value],\n                        });\n                        anims[key].valueInterp = toValue = 1 - fromInterp;\n                        anims[key].value = value;\n                    } else {\n                        anims[key].value = toValue = value as number;\n                    }\n\n                    // Get the transition for this key, the 'default' key, the root transition, or default transition if no transition prop\n                    const transitionForKey: MotionTransition =\n                        transition?.[key] || transition?.['default'] || transition || DefaultTransition;\n\n                    if (\n                        config.timing === 's' &&\n                        transitionForKey !== DefaultTransition &&\n                        isNumber((transitionForKey as MotionTransitionTween).duration)\n                    ) {\n                        (transitionForKey as MotionTransitionTween).duration *= 1000;\n                    }\n\n                    if (isString((transitionForKey as MotionTransitionTween).easing)) {\n                        (transitionForKey as MotionTransitionTween).easing =\n                            Eases[(transitionForKey as MotionTransitionTween).easing as unknown as EaseFunction];\n                    }\n                    if (isString((transitionForKey as MotionTransitionTween).ease)) {\n                        (transitionForKey as MotionTransitionTween).ease =\n                            Eases[(transitionForKey as MotionTransitionTween).ease as unknown as EaseFunction];\n                    }\n\n                    const animOptions = Object.assign(\n                        {\n                            toValue,\n                            useNativeDriver,\n                        },\n                        transitionForKey\n                    );\n\n                    // This typeof check is to make it work when rendered server-side like in Next.js\n                    if (typeof requestAnimationFrame !== 'undefined') {\n                        requestAnimationFrame(() => {\n                            const callback = onAnimationComplete ? () => onAnimationComplete(key) : undefined;\n                            const { loop, type } = transitionForKey;\n\n                            let animation: Animated.CompositeAnimation;\n\n                            // Spring or timing based on the transition prop\n                            if (type === 'spring') {\n                                animation = Animated.spring(anims[key].animValue, animOptions);\n                            } else {\n                                animation = Animated.timing(anims[key].animValue, animOptions as Animated.TimingAnimationConfig);\n                            }\n\n                            // Loop based on the transition prop\n                            if (loop !== undefined) {\n                                animation = Animated.loop(animation, { iterations: loop });\n                            }\n\n                            animation.start(callback);\n                        });\n                    }\n                }\n            }\n        };\n\n        useMemo(update, animValues); // eslint-disable-line react-hooks/exhaustive-deps\n\n        // Apply the animations to the style object\n        const style: StyleProp<any> = {};\n        const animProps = {};\n        const transforms: { key: string; value: AnimInfo }[] = [];\n        Object.entries(refAnims.current).forEach(([key, value]) => {\n            if (animateProps?.[key] !== undefined) {\n                animProps[key] = value.interpolation || value.animValue;\n            } else if (TransformKeys[key]) {\n                transforms.push({ key, value });\n            } else {\n                style[key] = value.interpolation || value.animValue;\n            }\n        });\n\n        // Map the transforms into an Animated transforms array\n        if (transforms.length) {\n            style.transform = transforms.map(({ key, value }) => ({\n                [TransformKeys[key]]: value.interpolation || value.animValue,\n            }));\n        }\n\n        const onLayout = transformOrigin ? useTransformOrigin(transformOrigin, style.transform, onLayoutProp) : onLayoutProp;\n\n        // @ts-ignore\n        return <Component style={StyleSheet.compose(styleProp, style)} onLayout={onLayout} {...rest} {...animProps} ref={ref} />;\n    }) as <TAnimate, TAnimateProps>(\n        p: Animated.AnimatedProps<ComponentPropsWithRef<T>> &\n            TExtraProps &\n            MotionComponentProps<T, ComponentStyle<T>, TAnimate, TAnimateProps>,\n        // @ts-ignore\n        ref: Ref<InstanceType<T>>\n    ) => ReactElement;\n}\nexport function createMotionAnimatedComponent<T extends ComponentType<any>>(component: T) {\n    return createMotionComponent(Animated.createAnimatedComponent(component));\n}\n"],"mappings":"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"}