/// <reference types="react" />
import * as RNSvg from 'react-native-svg';
export declare namespace MotionSvg {
    const Svg: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.SvgProps & import("react").RefAttributes<import("react").Component<RNSvg.SvgProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.SvgProps, any>, import("react-native").ViewStyle, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.SvgProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Polygon: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.PolygonProps & import("react").RefAttributes<import("react").Component<RNSvg.PolygonProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.PolygonProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.PolygonProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Rect: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.RectProps & import("react").RefAttributes<import("react").Component<RNSvg.RectProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.RectProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.RectProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Circle: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.CircleProps & import("react").RefAttributes<import("react").Component<RNSvg.CircleProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.CircleProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.CircleProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Ellipse: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.EllipseProps & import("react").RefAttributes<import("react").Component<RNSvg.EllipseProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.EllipseProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.EllipseProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Line: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.LineProps & import("react").RefAttributes<import("react").Component<RNSvg.LineProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.LineProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.LineProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Polyline: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.PolylineProps & import("react").RefAttributes<import("react").Component<RNSvg.PolylineProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.PolylineProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.PolylineProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Path: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.PathProps & import("react").RefAttributes<import("react").Component<RNSvg.PathProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.PathProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.PathProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const Text: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.TextProps & import("react").RefAttributes<import("react").Component<RNSvg.TextProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.TextProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.TextProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const TSpan: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.TSpanProps & import("react").RefAttributes<import("react").Component<RNSvg.TSpanProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.TSpanProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.TSpanProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const TextPath: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.TextPathProps & import("react").RefAttributes<import("react").Component<RNSvg.TextPathProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.TextPathProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.TextPathProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const G: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.GProps & import("react").RefAttributes<import("react").Component<RNSvg.GProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.GProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.GProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const ClipPath: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.ClipPathProps & import("react").RefAttributes<import("react").Component<RNSvg.ClipPathProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.ClipPathProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.ClipPathProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const LinearGradient: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.LinearGradientProps & import("react").RefAttributes<import("react").Component<RNSvg.LinearGradientProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.LinearGradientProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.LinearGradientProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
    const RadialGradient: <TAnimate, TAnimateProps>(p: import("react-native").Animated.AnimatedProps<RNSvg.RadialGradientProps & import("react").RefAttributes<import("react").Component<RNSvg.RadialGradientProps, any, any>>> & import("./Interfaces").MotionComponentProps<import("react").ComponentClass<RNSvg.RadialGradientProps, any>, unknown, TAnimate, TAnimateProps, unknown>, ref: import("react").Ref<import("react").Component<RNSvg.RadialGradientProps, any, any>>) => import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>>;
}
